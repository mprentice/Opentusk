CREATE TABLE tusk.grade_scale (
  `grade_scale_id` int(10) NOT NULL auto_increment,
  `name` varchar(24) NOT NULL,
  `created_by` varchar(24) default NULL,
  `created_on` datetime default '0000-00-00 00:00:00',
  `modified_by` varchar(24) default NULL,
  `modified_on` datetime default NULL,
  PRIMARY KEY  (`grade_scale_id`)
) ENGINE=InnoDB;

create table tusk.grade_scale_bounds (
grade_scale_bounds_id int(10) not null auto_increment primary key,
grade_scale_id int(10) unsigned not null,
grade_symbol varchar(10) not null,
lower_bound int(10) unsigned not null,
created_by varchar(24),
created_on datetime default 0,
modified_by varchar(24),
modified_on datetime default null
) type = InnoDB;

create table tusk.grade_scale_course (
grade_scale_course_id int(10) not null auto_increment primary key,
grade_scale_id int(10) unsigned not null,
course_id int(10) unsigned not null,
school_id int(10) unsigned not null,
created_by varchar(24),
created_on datetime default 0,
modified_by varchar(24),
modified_on datetime default null
) type = InnoDB;

create table tusk.grade_event_grade_scale (
grade_event_grade_scale_id int(10) not null auto_increment primary key,
grade_scale_id int(10) unsigned not null,
grade_event_id int(10) unsigned not null,
created_by varchar(24),
created_on datetime default 0,
modified_by varchar(24),
modified_on datetime default null
) type = InnoDB;

alter table tusk.grade_event add column max_possible_points int(10) after pass_grade;


alter table tusk.grade_event_history add column max_possible_points int(10) after pass_grade;
