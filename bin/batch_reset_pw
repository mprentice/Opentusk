#!/usr/bin/perl
# Copyright 2012 Tufts University 
#
# Licensed under the Educational Community License, Version 1.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
#
# http://www.opensource.org/licenses/ecl1.php 
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.


use FindBin;
use lib "$FindBin::Bin/../lib";

# batch_reset_pw
# this is a dangerous program
# 
use strict;
use MySQL::Password;
use HSDB4::Constants;
use HSDB4::SQLRow::User;

unless ($ARGV[0] =~ /SAVE/) {
    print "Usage: $0 SAVE < <file with usernames, one per line>\n";
    exit;
}

my @user_ids = <STDIN>;

print "This program will rest for 5 seconds before resetting the passwords in case you change your mind. If you wish to stop, press CTRL-C in the next five seconds.\n";

sleep(5);

my @completed;
HSDB4::Constants::set_user_pw (get_user_pw);

foreach (@user_ids) {
    my $r;
    my $msg;
    $_ =~ s/(.*)\n*/$1/;
    my $user_id = $_;
    my $user = HSDB4::SQLRow::User->new->lookup_key ($user_id);
    unless ($user->primary_key) {
	print "Could not find a user \"$user_id\"\n";
	next;
    }
    unless ($user->field_value('email')) {
	print "Could not find an email for user \"$user_id\"\n";
	next;
    }
    ($r,$msg) = $user->admin_reset_password;
    push(@completed,$user_id);
}

print "Passwords reset for: ".join(",",@completed)."\n";
















