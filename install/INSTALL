Installing & Configuring TUSK

**Opentusk**

	OpenTUSK is an open-source version of TUSK, the Tufts University Sciences Knowledgebase.
	OpenTUSK is a very very alpha release, and not everything works on it.
	As such, it comes along with absolutely no guarantees, nor any built-in support.
	(Sorry, but we are a very small group with a lot to do). Of course, help is welcome.

**Installation steps**

****Install the operating system****

This install was tested for Ubuntu 11.10 server. Install a minimal VM or server (for this option, hit F4 at the installation screen) and be sure to select OpenSSH server as an option. Instructions for CentOS, as well as additional release engineering stuff (packages, virtual appliances, etc) are forthcoming.


****Install the required packages****

	**Become root for convenience**
	$ sudo su -

	**Install required utilities**
	# apt-get -y install gcc expat openssl perlmagick xpdf ncftp build-essential git sendmail mailutils

	**Install Apache2 and Mysql Server**
	# apt-get -y install apache2 apache2-mpm-prefork mysql-server
	****NOTE: Remember your mysql root password, this will be needed later

	**Install required perl libraries from the standard repos**
	****NOTE: These may be combined for convenience
	# apt-get -y install libgd2-xpm libxml-sax-expatxs-perl libarchive-zip-perl 
	# apt-get -y install libxml-perl libapache2-mod-perl2 libapache2-mod-perl2-dev 
	# apt-get -y install libapreq2 libapreq2-dev libapache-dbi-perl 
	# apt-get -y install libunicode-string-perl libapache2-authcookie-perl 
	# apt-get -y install libapache2-request-perl libapache-session-perl libio-stringy-perl 
	# apt-get -y install libdate-calc-perl libdate-manip-perl 
	# apt-get -y install libxml-libxml-perl libxml-xslt-perl libgdbm-dev libxslt1-dev 
	# apt-get -y install libnet-ldap-perl libmail-sendmail-perl libgd-gd2-perl 
	# apt-get -y install libfile-type-perl libapache-session-wrapper-perl 
	# apt-get -y install libxml-libxslt-perl libjson-perl
	# apt-get -y install liblog-any-perl libhtml-mason-perl libcache-cache-perl
	# apt-get -y install libmime-lite-perl libdevel-size-perl libterm-readkey-perl
	# apt-get -y install libimage-exiftool-perl libparse-recdescent-perl
	# apt-get -y install libstatistics-descriptive-perl

	**Install additional requirements from CPAN 
	****NOTE: If this is the first CPAN install, you can accept the defaults
	# cpan install Sys::MemInfo
	# cpan install Apache2::SizeLimit
	# cpan install HTML::Mason
	# cpan install HTML::Defang

	**Install XML-Twig (OpenTUSK relies on an old version -- 3.17)
	# wget http://cpan.metacpan.org/authors/id/M/MI/MIROD/XML-Twig-3.17.tar.gz
	# tar xzvf XML-Twig-3.17.tar.gz
	# cd XML-Twig-3.17
	# perl Makefile.PL
	# make
	# make test
	# make install

****Get TUSK sourcecode from github****

	**From inside the tusk directory, make a local clone from github
	# mkdir -p /usr/local/tusk
	# cd /usr/local/tusk
	
	# git config --global user.name "FIRSTNAME LASTNAME"
	# git config --global user.email "your_email@youremail.com"
	# git config --global github.user USERNAME
	# git clone git@github.com:opentusk/Public.git

	**Create a symlink to handle future versions
	# ln -s Public current

****Make TUSK directory structure****

	**A simple script has been provided as a convenience
	# chmod +x /usr/local/tusk/current/install/create_directories.sh
	# /usr/local/tusk/current/install/create_directories.sh


****Add groups and users****
	****NOTE:	Replace YOURAPPUSER with a username of your choice to run the app
	****		Replace YOURADDADMIN with a user for full backend admin rights.
	****		This user structure is a bit archaic and will be phased out
	
	# adduser YOURAPPUSER
	# adduser YOURAPPADMIN
	# usermod -G admin YOURAPPADMIN
	# usermod -G www-data YOURAPPUSER 


****Prepare the database with minimal data****
	****NOTE: 	Below, replace DB_PASSWORD with the mysql root
	****		password you assigned during installation.
	****		You can assign any secure password to the
	****		content manager user (CONTENT_MANAGER_USER). Replace CONTENT_MANAGER_PASSWORD
	****		with your chosen value

	# cd /usr/local/tusk/current/install/sql
	# mysql -u root -pDB_PASSWORD < tusk.sql
	# mysql_fix_privilege_tables --user=root --password=DB_PASSWORD
	# mysql -u root -pDB_PASSWORD
	mysql> GRANT ALL ON *.* to CONTENT_MANAGER_USER@'localhost' identified by 'CONTENT_MANAGER_PASSWORD';
	mysql> flush privileges;
	mysql> quit;


****Create a self-signed SSL certificate****

	# cd /usr/local/tusk/ssl_certificate/
	# openssl genrsa -out server.key 1024
	# openssl req -new -key server.key -out server.csr
	# openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt


****Configure Apache2 and OpenTUSK based off of the provided templates****

	**Edit the provided template files
	****NOTE:	In the following section, you will need to replace the '###'
	****		characters with values for each of their preceding variables.
	****		- Replace the '###' after CONTENT_MANAGER with your chosen value from earlier. 
	****		- Replace the '###' after CONTENT_MANAGER_PASSWORD with your chosen value from earlier. 
        ****            - Replace the entry after MYWEBMASTER with the email address of your webmaster.
	****		- Replace the entry after MYFQDN with the fully-qualified domain name (FQDN) of your server.
	****		- The value after TUSKFQDN is the URL or IP address through OpenTUSK will be accessed. 
	****		  This can be the same as your server's FQDN.
	# cd /usr/local/tusk/current/install
	# find conf_templates -name "*conf" -exec sed -i 's/CONTENT_MANAGER_USER/###/g' {} \;
	# find conf_templates -name "*conf" -exec sed -i 's/CONTENT_MANAGER_PASSWORD/###/g' {} \;
	# find conf_templates -name "*conf" -exec sed -i 's/MYWEBMASTER/###/g' {} \;
	# find conf_templates -name "*conf" -exec sed -i 's/MYFQDN/###/g' {} \;
	# find conf_templates -name "*conf" -exec sed -i 's/TUSKFQDN/###/g' {} \;

	**Edit the tusk.conf template for more specific data
	# cp /usr/local/tusk/current/install/conf_templates/tusk_conf_templates/tusk.conf /usr/local/tusk/conf/tusk.conf
	# vi /usr/local/tusk/conf/tusk.conf


	**Apply the templates to working Apache2 configuration files
	# cd /usr/local/tusk/current/install/conf_templates/apache_conf_templates
	# cat apache2_additions.conf >> /etc/apache2/apache2.conf
	# cat tusk_http_vhost.conf > /etc/apache2/sites-available/opentusk_http
	# cat tusk_https_vhost.conf > /etc/apache2/sites-available/opentusk_https


****Create a default school****

	**Log into the MySQL database and add an admin user for OpenTUSK
	**	Replace MYADMINPASSWORD with a string of your choosing.

	# mysql -u root -pDB_PASSWORD
	mysql> INSERT INTO hsdb4.user (user_id, source, status, password, lastname, firstname, affiliation) VALUES ('admin', 'internal', 'Active', PASSWORD('MYADMINPASSWORD'), 'Trator', 'Adminis', 'default');
	mysql> quit

	**Run the create_school script to create a default school
	**	This script will prompt you for a user and password for a user that has universal GRANT privileges on DB.
	**	For this, use 'root' and the value you chose for 'DB_PASSWORD'.
	**	You will also be prompted for the user id of admin for default school. Use 'admin'.
	# cd /usr/local/tusk/current/install
	# ./create_school


****Adjust permissions

	# chown -R www-data:YOURAPPUSER /data
	# chown -R YOURAPPUSER:www-data /usr/local/tusk/
	# chown -R www-data:www-data /usr/local/tusk/current/mason_cache

****Enable apache modules and restart****

	# a2enmod rewrite
	# a2enmod ssl
	# a2enmod apreq
	# rm /etc/apache2/sites-enabled/000-default
	# a2ensite opentusk_http
	# a2ensite opentusk_https
	# service apache2 restart
