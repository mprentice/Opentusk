[! use HSDB45::Eval;
   use HSDB45::Eval::Formatter;
   use HSDB45::Eval::SavedAnswers;
   use Apache::Cookie;
   use Apache::Constants qw/:common/;
   use HSDB4::DateTime;
   use HSDB45::Eval::Secret;
   use HSDB45::StyleSheet;
   use XML::LibXML;
   use XML::LibXSLT;
!]
[-

    $embperldir=$req_rec->server_root_relative($ENV{EMBPERL_LIB});

    $eval = HSDB45::Eval->lookup_path( $req_rec->path_info() );
    if (!defined($eval) || (!$eval->primary_key())) {
        Execute({inputfile => "$embperldir/missingHandler.html"});
        exit;
    }


    ($result, $disp_msg, $write_result, $write_msg) = (0, '', 0, '');

    # Get the authenticated user
    unless ($username = $req_rec->connection->user) {
        %cookies = Apache::Cookie->new($req_rec)->parse;
	unless ($cookies{'Ticket'}) {
	    $disp_msg = 'Must be logged in to access evals.';
	    return;
	}
        %ticket = $cookies{'Ticket'}->value;
        $username = $ticket{'user'};
    }
    $user = HSDB4::SQLRow::User->new ()->lookup_key ($username);
    unless ($user->primary_key) {
	$disp_msg = 'Must be logged in to access evals.';
	return;
    }

    if ($eval->admin_group()->contains_user($user)) {
        ($result, $disp_msg) = (1, '');
    }
    else {
        ($result, $disp_msg) = $eval->is_available ();
        ($result, $disp_msg) = $eval->is_user_allowed ($user);
    }

    @bad_fields = ();
    @loaded_fields = ();
    $saved_answers_id = 0;
    @debug_msgs = ();

    my $password = $fdat{submit_password} || $fdat{load_password};
    delete $fdat{submit_password};
    delete $fdat{load_password};

    push @debug_msgs, "Clear/Submit/Save: $fdat{submit_action}" if (defined($fdat{submit_action}));
    push @debug_msgs, "Load: $fdat{Load}" if (defined($fdat{Load}));
    push @debug_msgs, "Display msg: $disp_msg" if (defined($disp_msg));

    $fdat{submit_action} = '' unless defined $fdat{submit_action};
	foreach my $question ($eval->questions) {
		if ($question->body->isa( "HSDB45::Eval::Question::Body::IdentifySelf" ) ) {
			$fdat{'eval_q_' . $question->field_value('eval_question_id')} = $username;
		}
	}

    if ($fdat{submit_action} eq 'Clear') {
	push @debug_msgs, "Trying to do a clear.";
	for my $key (keys %fdat) {
	    next unless $key =~ /^eval_q_/;
	    delete $fdat{$key};
        }
    }
    elsif ($password and $fdat{'Load_Submit'} or $fdat{submit_action} eq 'Save') {
	push @debug_msgsg, "Doing either a save or a load.";
	my $answers = 
	    HSDB45::Eval::SavedAnswers->new($eval, $user, $password);
        if ($user->verify_password($password)) {
	    if ($answers) {
		if ($fdat{submit_action} eq 'Save') {
		    push @debug_msgs, "Doing a save (got the answers object).";
        	    $answers->set_answers(%fdat);
		    $write_msg = "Answers have been saved.";
        	}
		elsif ($fdat{'Load_Submit'}) {
		    push @debug_msgs, "Doing a load (got the answers object).";
		    if ($answers->answers()) {
			while (my ($key, $answer) = each %{$answers->answers()}) {
			    $fdat{"eval_q_$key"} = $answer;
			    push @loaded_fields, $key;
			}
			$write_msg = "Saved answers have been loaded.";
                    }
		    else {
			$write_msg = "No saved answers could be found.";
		    }
		}
	        $saved_answers_id = $answers->id();
	    }
	    else {
		$write_msg = "There was an error in processing your answers.";
	    }
	}
        else {
	    $write_msg = "Your password does not match.";
        }
    }
    elsif ($fdat{submit_action} eq 'Submit' and $password and not $disp_msg) {
	push @debug_msgs, "Doing a big submit.";
	my $answers = 
	    HSDB45::Eval::SavedAnswers->new($eval, $user, $password);
        if ($user->verify_password($password)) {
	    @bad_fields = $eval->validate_form (\%fdat);
	    if (@bad_fields) {
		$answers->set_answers(%fdat);
		$write_msg = "Not all required fields filled";
		$saved_answers_id = $answers->id();
  	        while (my ($key, $answer) = each %{$answers->answers()}) {
		    $fdat{"eval_q_$key"} = $answer;
		}
	    }
	    else {
		($write_result, $write_msg) = $eval->answer_form ($user, \%fdat);
		if ($write_result && $answers && $answers->id()) { $answers->do_delete() }
	    }
	    push @debug_msgs, "Finished the submit.";
        }
        else {
	    $answers->set_answers(%fdat);
	    $write_msg = "Password does not match.";
	    $saved_answers_id = $answers->id();
  	    while (my ($key, $answer) = each %{$answers->answers()}) {
		$fdat{"eval_q_$key"} = $answer;
	    }
	    push @debug_msgs, "The submit failed, somehow.";
        }
    }

    $filename = $ENV{XSL_ROOT} . "/Eval/eval.xsl";

    $formatter = HSDB45::Eval::Formatter->new($eval);
    # $formatter->set_saved_answers(%fdat);
    $teaching_site = $eval->field_value('teaching_site_id');
    if (!defined($teaching_site)){
	$teaching_site = '';
    }
-]
[-
    $escmode=0;
    $embperldir = $req_rec->server_root_relative($ENV{EMBPERL_LIB});
    Execute ({inputfile => "$embperldir/hsdblib.html", import => 1});
-]

[$ sub submit_box $]
<div class="password_box" style="background: #eeeeee; border-style: dotted; border-width: thin; margin-top: 6pt; padding:6px;">
<h4 class="title">Save or Submit Responses</h4>

<p class="instruction">If you wish to set aside this eval and come
back to it later, you may save the form by choosing "Save Responses",
entering your password, and clicking <strong>Save/Submit</strong>. Your responses will be
saved into an encrypted draft area.</p>

<p class="instruction">When you are satisfied with your answers,
choose "Submit Responses", enter your password and click
<strong>Save/Submit</strong>. <em>Once you have submitted your answers, you
will not be able to view or change them again.</em> After you submit
your answers, you will receive an acknowledgement that your answers
have been received and a receipt which you may print. (You will also
be e-mailed a copy of the receipt.)</p> 

<table cellspacing="4" border="0"> 
<tr>
  <td align="right"><b style="font-family: sans-serif">User name:</b></td>
  <td>[+ $user->out_abbrev +]</td>
  <td align="right"><img src="/icons/transdot.gif" alt="" width="18pt" height="1pt" />
    <b style="font-family: sans-serif">Action:</b></td>
  <td><select name="submit_action">
	<option selected="selected" value="">-- Select Save/Submit --</option>
	<option value="Save">Save Responses</option>
        [$ if $eval->is_submittable() $]
	  <option value="Submit">Submit Responses</option>
        [$ endif $]
	<!-- <option value="Clear">Clear Responses</option> -->
      </select>
  </td>
  <td align="right"><img src="/icons/transdot.gif" alt="" width="18pt" height="1pt" />
    <b style="font-family: sans-serif">Password:</b></td>
  <td><input type="password" name="submit_password"></td>
  <td><input type="submit" name="Save/Submit" value="Save/Submit"></td>
</tr>
</table>
</div>
[$ endsub $]

[$ sub save_load_box $]
<div class="password_box" style="padding:6px;">
<h4 class="title"><a name="SaveLoad">Save/Load Responses</a></h4>
<p class="instruction">If you have already partially completed and saved answers to this eval, you may retrieve your responses by entering your password here and clicking <strong>Load</strong>.</p>
<table cellspacing="4" border="0">
<tr>
  <td><b style="font-family: sans-serif">User name:</b></td>  
  <td>[+ $user->out_abbrev +]</td>
</tr>
<tr>

  <td><b style="font-family: sans-serif">Password:</b></td>
  <td><input type="password" name="saveload_password"></td>
</tr>
<tr>
  <td></td>
  <td><input type="submit" value="Save" name="Save">
    <img src="/icons/transdot.gif" width="12" height="1"/>
    <input type="submit" value="Load" name="Load"></td>
</tr>
</table>
</div>
[$ endsub $]

[$ sub load_box $]
<div class="password_box" style="background: #eeeeee; border-style: dotted; border-width: thin; margin-bottom: 6pt;padding:6px;">
<form name="load_form" method="post" onSubmit="return checkLoadPassword()">
<h4 class="title"><a name="Load">Load Previously Saved Responses</a></h4>
<p class="instruction">If you have already partially completed and saved answers to this eval, you may retrieve your responses by entering your password here and clicking <strong>Load</strong>.</p>
<table cellspacing="4" border="0">
<tr>
  <td align="right"><b style="font-family: sans-serif">User name:</b></td>  
  <td>[+ $user->out_abbrev +]</td>
  <td align="right"><img src="/icons/transdot.gif" alt="" width="18pt" height="1pt" />
    <b style="font-family: sans-serif">Password:</b></td>
  <td><input type="password" name="load_password"></td>
  <td><input type="hidden" name="Load_Submit" value="1">
      <input type="submit" value="Load" name="Load"></td>
</tr>
</table>
</form>
</div>
[$ endsub $]

<html>
<head>
<title>[+ $TUSK::Constants::SiteAbbr +] Evaluation: [+ $eval->out_label +]</title>
[# Execute ("$embperldir/hsdb4-style.css"); #]
<LINK REL=STYLESHEET TYPE="text/css" HREF="/style/hsdb4.css" TITLE="HSDB4">
<link rel="stylesheet" type="text/css" href="/style/eval.css" title="HSDBEval"/>
<script language="JavaScript" src="/scripts/eval.js"></script>
<script language="JavaScript">

var requiredObject = new Array();
function doInitialSatisfys() {
  [$ foreach $eval_q (keys %fdat) $]
  // [+ $eval_q +] : [+ $fdat{$eval_q} . "\n" +]
  [- ($id) = $eval_q =~ /^eval_q_(\d+)$/ -]
  [$ if ($id) $]
  satisfy([+ $id +], '');
  [$ endif $]
  [$ endforeach $]
}

</script>
</head>
<body>

[- Execute ("$embperldir/userbox.html") -]

[# Now do the title thing #]
<h2 class="title">[+ $eval->out_label() +]</h2>

<img src="/icons/transdot.gif" width=1 height=1>
<hr>

[# <ul>
<li>[+ $debug_msgs[$row] +]</li>
</ul> #]

[$ if $write_result $]

<h4 class="error">Successful Entry</h4>

You have completed the evaluation entitled
<b>"[+$eval->field_value('title')+]"</b>.  Your feedback is greatly
appreciated.

<h4 class="error">Receipt Information</h4>
[- $date = HSDB4::DateTime->new() -]
<table>
  <tr>
    <td><b>School</td>
    <td>[+ $eval->school() +]</td>
  </tr>
  <tr>
    <td><b>Eval ID</td>
    <td>[+ $eval->primary_key() +]</td>
  </tr>
  <tr>
    <td><b>User ID</td>
    <td>[+ $username +]</td>
  </tr>
  <tr>
    <td><b>Timestamp</td>
    
    <td>[+ $date->out_mysql_timestamp +]</td>
  </tr>
  <tr>
    <td><b>Receipt</td>
    <td>[+ $receipt = HSDB45::Eval::Secret::generate_hashcode($eval->school(),  $eval->primary_key(), $username, $date) +]</td>
  </tr>
</table>

[-
  my $body = "School: "  . $eval->school() . "\n";
  $body .= "Eval ID: "   . $eval->primary_key() . "\n";
  $body .= "User ID: "   . $user->primary_key() . "\n";
  $body .= "Timestamp: " . $date->out_mysql_timestamp() . "\n";
  $body .= "Receipt: "   . $receipt . "\n\n";
  $body .= "This may be verified at http://$ENV{SERVER_NAME}/hsdb45/receipt_verification";
  $user->send_email("Eval Completion Receipt: " . $eval->field_value("title"), $body);
-]

[$ elsif $disp_msg $]

<h4 class="error">[+ $disp_msg +]</h4>

[$ else $]

[$ if $write_msg $]

<h4 class="error">[+ $write_msg +]</h4>

[$endif $] [# Ends the if $write_msg #]

[$ endif $]

[$ if ($result && (! $write_result)) $]

[- load_box -]

<form name="eval_form" method="post" onSubmit="return checkActionSpecified()">

[$ if $saved_answers_id $]
<!-- Saved Answers ID: [+ $saved_answers_id +] -->
<!-- Loaded Answers: [+ @loaded_answers +] -->
[$ else $]
<!-- No Saved Answers -->
[$ endif $]
<!-- URLPREFIX : [+ 'https://' . $req_rec->header_in("Host") . '/' +]  -->
<!-- TEACHING_SITE_ID : [+ $teaching_site +] -->
<ol>
[+
    $stylesheet = $eval->question_stylesheet();

    my $server = $req_rec->server();
    my $server_name = $server->server_hostname();
    my $server_port = '';
    if (Apache->define('DEV')){
        $server_port = ':'.($server->port() - 100); 
    }

    my @atts = ('USERID'          => $user->primary_key(),
		'SAVED_ANSWER_ID' => $saved_answers_id,
		'TEACHING_SITE'=> $teaching_site,
                'URLPREFIX'=>'http://' . $server_name . $server_port.'/',
                'HTML_EVAL_ERROR_MESSAGE'=>$TUSK::Constants::evalErrorMessage,
		# 'NUM_USERS' => $eval->num_users(),
	);

    if($stylesheet) {
        return $stylesheet->apply_stylesheet($formatter->get_xml_text(),
					     @atts);
    } else {
        return HSDB45::StyleSheet::apply_global_stylesheet($ENV{XSL_ROOT} . $eval->global_question_stylesheet(),
						           $HSDB45::Eval::Question::Body::prolog.$formatter->get_xml_text(),
                                                           @atts);
    }
+]
</ol>
[- submit_box -]

</form>

[$ endif $]
<hr/>
[- $req = shift; $req->{footer_width} = "100%"; -]
[- Execute ($req_rec->server_root_relative("$ENV{EMBPERL_LIB}/footer_links.html")) -]


<script language="JavaScript">
doInitialSatisfys();
</script>

</body>
</html>
