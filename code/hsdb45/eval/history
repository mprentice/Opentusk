[!
    use HSDB4::SQLRow::User;
    use HSDB45::Eval::Completion;
!]

[- 
    $escmode=0;
    $embperldir = $req_rec->server_root_relative($ENV{EMBPERL_LIB});
    Execute ({inputfile => "$embperldir/hsdblib.html", import => 1});
    Execute ("$embperldir/hsdb4-style.css");

    # Get the authenticated user
    $username = $req_rec->connection->user;
    my %args = $req_rec->args();
    if (!defined($args{'user'})){
        $user = HSDB4::SQLRow::User->new ()->lookup_key ($username);
    } else {
        $user = HSDB4::SQLRow::User->new()->lookup_key($args{'user'}); 			
    }
-]

<html>
<head>
<title>TUSK Eval History: [+ $username +]</title>
<link rel="stylesheet" type="text/css" href="/style/eval.css" title="HSDBEval"/>
</head>
<body>
[- Execute ($req_rec->server_root_relative("$ENV{EMBPERL_LIB}/userbox.html")) -]
<h2 class="title">Eval History for [+ $user->user_id() +]</h2>

<table cellpadding="20">
    <tr>
        <th class="title" align="left">Completed&nbsp;Evals</th>
	<th class="title" align="left">Uncompleted&nbsp;Evals</th>
	<th class="title" align="left">Past&nbsp;Due&nbsp;Evals</th>
    </tr>
    <tr>
        <td valign="top">
	    [-
	        %sorted_by_school = ();
	        foreach $completion (sort 
				{$a->out_label() cmp $b->out_label() } $user->eval_completions()) {
		    unless($sorted_by_school{$completion->eval()->school()}) {
			$sorted_by_school{$completion->eval()->school()} = [];
		    }
		    push(@{$sorted_by_school{$completion->eval()->school()}}, $completion);
		}
	    -]
	    <table>
	    [$ foreach $school (keys(%sorted_by_school)) $]
	        <tr><td><b>[+ $school +]</b></td></tr>
		[$ foreach $completion (@{$sorted_by_school{$school}}) $]
	        <tr><td>[+ $completion->eval()->out_label() +]</td></tr>
		[$ endforeach $]
	    [$ endforeach $]
	    </table>
	</td>
	<td valign="top">
	    [-
	        %sorted_by_school = ();
		foreach $eval (sort {$a->out_label() cmp $b->out_label() } $user->current_evals()) {
		    unless($sorted_by_school{$eval->school()}) {
			$sorted_by_school{$eval->school()} = [];
		    }
		    push(@{$sorted_by_school{$eval->school()}}, $eval);
		}
	    -]
	    <table>
	    [$ foreach $school (keys(%sorted_by_school)) $]
	        <tr><td><b>[+ $school +]</b></td></tr>
		[$ foreach $eval (@{$sorted_by_school{$school}}) $]
	        <tr><td>
		    <a href="/protected/eval45/[+ $eval->school() +]/[+ $eval->field_value('eval_id') +]">
		        [+ $eval->out_label() +]
		    </a>
		</td></tr>
		[$ endforeach $]
	    [$ endforeach $]
	    </table>
	</td>
	[# Past Due Evals #]
        <td valign="top">
            [-
                %sorted_by_school = ();
                foreach $eval (sort {$a->out_label() cmp $b->out_label() } $user->overdue_evals()) {
                    unless($sorted_by_school{$eval->school()}) {
                        $sorted_by_school{$eval->school()} = [];
                    }
                    push(@{$sorted_by_school{$eval->school()}}, $eval);
                }
            -]
            <table>
            [$ foreach $school (keys(%sorted_by_school)) $]
                <tr><td><b>[+ $school +]</b></td></tr>
                [$ foreach $eval (@{$sorted_by_school{$school}}) $]
                <tr><td>
                        [+   $eval->out_label() +]
                </td></tr>
                [$ endforeach $]
            [$ endforeach $]
            </table>
        </td>

    </tr>
</table>

</body>
</html>
