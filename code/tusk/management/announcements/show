<%shared>
my $school                 = $m->comp("/tmpl/url:get_school");
my $type_object            = $m->comp("/tmpl/url:get_type_object");
my $self_path              = "school/" . $school;
my $is_course_announcement = (ref($m->comp("/tmpl/url:get_type_object")) eq "HSDB45::Course");
my $course;
if ( $is_course_announcement ) {
       	$course             = HSDB45::Course->new( _school => $school )->lookup_key( $type_object->course_id );
		$self_path          = "course/" . $school . "/" . $type_object->course_id;
}

my $usergroup_id;
my $maingroup;
</%shared>

<%method jsarray>
% return ['layers.js','element.js'];
</%method>

<%method should_show_tp_dropdown>
% return $is_course_announcement;
</%method>

<%method red_header_text>
% return $m->comp( "SELF:title" );
</%method>

<%method right_header_text>
%	return [ {txt => 'Preview', url => "/view/$self_path/ann" } ];
</%method>

<%method title>
% return 'Manage Announcements';
</%method>

<%method additional_extratext>
<%args>
	$args => {}
</%args>
<%perl>
my $temp_hash = ();
my $user_groups;

$usergroup_id = (defined($args->{'ug_id'})) ? $args->{'ug_id'} : 0;

if ($is_course_announcement) { 
	$temp_hash->{name} = "Course Group";
	$temp_hash->{text} .= "<select name=\"ug_id\" onchange=\"document.generic.submit();\" class=\"navsm\">";
	$temp_hash->{text} .= "<option value=\"0\" class=\"navsm\">Entire Course\n";
} else {
	$usergroup_id = $TUSK::Constants::SchoolWideUserGroup->{lc($school)} unless ($usergroup_id);
	$temp_hash->{name} = "Group";
	$temp_hash->{text} = "<select name=\"ug_id\" onchange=\"document.generic.submit();\" class=\"navsm\">";
	$temp_hash->{text} .= "<option value=\"".$TUSK::Constants::SchoolWideUserGroup->{lc($school)}."\" class=\"navsm\">Entire School\n";
}

if ( $is_course_announcement ) {
	$user_groups = [ $course->sub_user_groups( $m->comp("SELF:get_timeperiod_id") ) ]; 
}
else {
	$user_groups = [ HSDB45::UserGroup->new( _school => $school )->lookup_conditions("sub_group='No'", "order by upper(label)") ];
}

foreach my $group (@$user_groups) {
	if ($group->primary_key == $usergroup_id or (!$usergroup_id and $group->primary_key == $TUSK::Constants::SchoolWideUserGroup->{lc($group->school)})){
	    $maingroup = $group;
	}
	unless ($group->primary_key == $TUSK::Constants::SchoolWideUserGroup->{lc($group->school)}) {
	    $maingroup = $group if ($group->primary_key == $usergroup_id);
	    $temp_hash->{text} .= "<option class=\"navsm\" value=\"" . $group->primary_key . "\" ";
	    $temp_hash->{text} .= "selected" if ($group->primary_key == $usergroup_id);
	    $temp_hash->{text} .= ">" . $group->field_value('label') . "\n";
	}
}
$temp_hash->{text} .= "</select>";

return $temp_hash;
</%perl>
</%method>

<%perl>
if (!$is_course_announcement || TUSK::Session::is_director($course, $m->session->{user}->{user_id}) || TUSK::Session::is_admin($m->session, $m->session->{user})) {
	$m->comp("/tmpl/element:cms_button_row", links => [ {link_txt=>'/management/announcements/addedit/' . $self_path . '?ug_id=' . $usergroup_id, display_txt=>'New Announcement'} ] );
}

my $announcements = [];

if ($usergroup_id == 0) {
	$announcements = [ $course->all_announcements ] if ( defined $course );
} else {
	$announcements = [ $maingroup->all_announcements ] if ( defined $maingroup );
}

my $col_fields = [ {'label'=>'Start Date', 'field'=>'start_date', 'sort'=>'str'}, {'label'=>'Announcement', 'field'=>'body'} ];
my $action_columns = [];

if (!$is_course_announcement || TUSK::Session::is_director($course, $m->session->{user}->{user_id}) || TUSK::Session::is_admin($m->session, $m->session->{user})) {
	push @$action_columns, {'label'=>'Modify','link'=>"/management/announcements/addedit/$self_path", 'extra'=>'?ug_id=' . $usergroup_id};
	push @$action_columns, {'label'=>'Delete','link'=>"/management/announcements/delete/$self_path"};
}
</%perl>

<& /tmpl/element:object_selection_box, params => { 
				columns         => $col_fields, 
				nobutton        => 1, 
				sort_box        => 0,
				toggle          => 1,
				sort            => 'start_date',
				object_list     => $announcements,
				action_columns  => $action_columns,
				empty_message   => 'No usergroups available.',
				type_path       => "", }
&>