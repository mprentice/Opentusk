<%flags>
	inherit => undef
</%flags>

<%attr>
no_check_path => 1
page_header => ''
page_footer => ''
</%attr>

<%once>
	use TUSK::Core::School;
	use TUSK::Core::CompetencyType;
	use TUSK::Core::CompetencyCompetencyType;
</%once>

<%perl>
	my $school    = TUSK::Core::School->new()->lookupReturnOne("school_name = '" . $m->comp("/tmpl/url:get_last_path_id") . "'");
	my $school_id = $school->getFieldValue( 'school_id' );
	my $type;
	if ( $ARGS{'id'} =~ /^new_child_of_/ ) {
		$type = TUSK::Core::CompetencyType->new();
	} else {
		my $id = $ARGS{'id'};
		$id =~ s/_[\d]+//;
		$type = TUSK::Core::CompetencyType->new()->lookupKey( $id );
	}

	print "{\n";

	if ( $ARGS{'delete'} ) {
		if ( scalar( @{TUSK::Core::CompetencyCompetencyType->lookup( "competency_type_id = " . $type->getCompetencyTypeID )} ) ) {
			print "\"error\" : \"This cannot be deleted because there are currently competencies of this type.\"\n";
		} else {
			$type->delete( { user => $m->session->{'user'}->user_id } );
			print "\"error\" : \"\"\n";
		}
	} else {
		$type->setSchoolID( $school_id );
		$type->setDescription( $ARGS{'col0'} );
		$type->save( { user => $m->session->{'user'}->user_id } );

		print "\"id\"    : \"" . $type->getCompetencyTypeID() . "_" . time() . "\",\n";
		print "\"error\" : \"\"\n";
	}
	print "}";
</%perl>

