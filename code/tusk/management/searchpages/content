<%attr>
	no_check_path => 1
</%attr>
<%once>
	use TUSK::Search::Content;
	use TUSK::Constants;
    use Data::Dumper;
	use HSDB4::SQLRow::Content;
</%once>


<& /tmpl/element:table, params => { 
	width => "100%",
	cellspacing =>"0",
	cellpadding =>"0" } &>

<tr>
<td VALIGN="middle">
	<table  cellspacing="0" cellpadding="0"> 
		<input type="hidden" name="join" value="and">
	<tr>
		<td class="labelgray">Keywords:</td>
		<td class="cell-left"><input TYPE="TEXT" SIZE=35 NAME="query" VALUE="<% $ARGS{query} %>" SIZE="50"></td>
	</tr>

	<tr>
		<td class="labelgray" >Document Title:</td>
		<td class="cell-left"><input TYPE="TEXT" SIZE=35 NAME="title" VALUE="<% $ARGS{title} %>" SIZE="50"></td>
	</tr>
%	 if (defined($ARGS{mycontent})) {
		<input type="hidden" name="author" value="<% $user %>">
%	} else {
	<tr>
		<td class="labelgray">Author:</td>
		<td class="cell-left"><input TYPE="TEXT" SIZE=35 NAME="author" VALUE="<% $ARGS{author} %>"></td>
	</tr>
%	}

        <tr>
                <td class="labelgray">Course Title:</td>
                <td class="cell-left"><input TYPE="TEXT" SIZE="35" NAME="course" VALUE="<% $ARGS{course} %>"></td>
        </tr>
        <tr>
                <td class="labelgray">Content ID:</td>
                <td class="cell-left"><input TYPE="TEXT" SIZE="10" NAME="content_id" VALUE="<% $ARGS{content_id} %>"></td>
        </tr>
		<tr><td>&nbsp;</td>
<td class="cell-submit">
<input type="submit" name="search" value="Search" class="formbutton">&nbsp;

% if ($TUSK::Constants::HelpMap{'search'}) {
<a href="/view/content/<% $TUSK::Constants::HelpMap{'search'} %>" target="help">Help</a>
% }
</td></tr>
</table>

</td>
<td>&nbsp;</td>
<td VALIGN="top">
	<table>
<tr>
	<td align="center">Type<br>
<select NAME="media_type" SIZE="6" MULTIPLE>
<option VALUE="" SELECTED>All</option>
<option VALUE="Audio">Audio</option>
<option VALUE="Collection">Collection</option>
<option VALUE="Document">Document</option>
<option VALUE="DownloadableFile">Downloadable File</option>
<option VALUE="Flashpix">Flashpix</option>
<option VALUE="PDF">PDF</option>

<option VALUE="Shockwave">Shockwave</option>
<option VALUE="Slide">Slide</option>
<option VALUE="Student Notes">Student Notes</option>
<option VALUE="URL">URL</option>
<option VALUE="Video">Video</option>
	</select>
	</td>
	<td VALIGN="top" ALIGN="center"></td>
	<td align="center">School<br>

<select NAME="school" SIZE="6" MULTIPLE>
<option VALUE="" SELECTED >All</option>
% foreach my $search_school (@TUSK::Constants::SearchSchools) {
<option VALUE="<% $search_school %>"><% $search_school %></option>
% } # END FOR EACH

	</select>

	</td>
	</tr>
	<tr><td colspan="8" align="center"><div class="hinttext">press and hold the control (Ctrl) key while clicking
to select multiple items</div></td></tr>
	</table>
</td>
</tr>

<input TYPE="hidden" NAME="search" VALUE="1">


% if ($ARGS{search}) {
	<tr>	
		<td class="layers-left">
%	 my $numResults = scalar(@$results) ; 
		<div id="count"><% $numResults %> matching entr<% ($numResults == 1)? "y" : "ies" %><% ($numResults)? ":" : "" %></div>
		</td></tr>
%	 if ($numResults) {
	<tr>
		<td colspan="3">
	<div id="searchdiv"></div>

<%perl>
        foreach my $content (@{$results}){
		if ($content->primary_key()){
			push (@contentarray, {
					content_id => $content->primary_key() || 0 , 
					author => join(',', map {$_->out_abbrev} $content->child_authors) || '',
					type => $content->type() || '',
					title => $content->title() || '',
					icon => $content->out_icon() || '',
				});
		}
        }

	my $fields = ['content_id','title','type','author'];
	my $display = [
                                        {field=>'icon', label=>'&nbsp;',align=>'left', length=>40, uneditable=>'Y'},
                                        {field=>'type', align=>'left', length=>100,},
                                        {field=>'title', align=>'left', length=>300,},
                                        {field=>'author', align=>'left', length=>300,}
			  ];
	my $action = { usage => 'Yes', length => 100, functions => [
                                                                        { func => 'update_parent', label => 'Select' }
                                                                ]};
	if (defined($ARGS{mycontent})){
			
		$action = { usage => 'Yes', length => 100, functions => [
                                                                        { func => 'view', label => 'View' }
                                                                ]};
	}
      
  
</%perl>

<& /tmpl/layers:create_layer, struct => {
			
   						layer => 'searchdiv',
                        fields => $fields, 
                        name => '',
                        sort => {usage => 'No'},
                        scrollrows => 9,
                        parentlayer => $ARGS{parentlayer},
                        action => $action,
                        display => $display,
                        validate => {
                                        usage => 'No',
                                },
                        data => \@contentarray,
						}
&>


		</td>

	</tr>
% } # end if results #]
% }	# end if search #]
</table>
<input type="hidden" name="parent" value="<% $ARGS{parent} %>">

<script language="Javascript">
function update_parent(layer,id){
       		var pk ;
	        if (layer == 'searchdiv'){
        	        pk = layers[layer].structure.data[id].content_id;
%			 if (defined ($ARGS{'parent'})){
%				print OUT $ARGS{parent}; 
%				} else {
%				print OUT "var foo";
%				}
//			   = pk;
%			 if ($ARGS{'parentlayer'}) {
				add('searchdiv',id,'<% $ARGS{'parentlayer'} %>')
%			}			
			opener.window.focus();
		}
}
	
function view(layer, id){
		location.href = '/view/content/' + layers[layer].structure.data[id].content_id;
}
</script>


<%init>
	my $contentString;
	my $results = [];
	my $ids;
	my %queryStruct;
	my @contentarray;
	
	my $user = $m->session->{'user'}->user_id();
	if ($ARGS{search}){
		if ($ARGS{content_id}){
			$contentString = $ARGS{content_id};
			$contentString =~ s/[^0-9, ]//g;
			$results = [HSDB4::SQLRow::Content->new->lookup_conditions(" content_id IN ( $contentString )")];
		} elsif ($ARGS{query} || $ARGS{title} || $ARGS{author} || $ARGS{course}) {
			 ## do a search for each field
		
		
			 %queryStruct = map { ( $_ => $ARGS{$_} )  } grep { $ARGS{$_} } qw(query title author course school media_type);
			 $ids = TUSK::Search::Content->new()->search({ %queryStruct });
			$results = [];
			if (scalar(@$ids)){
				$results = [ HSDB4::SQLRow::Content->new()->lookup_conditions("content_id in (" . join(',', @$ids) . ")") ];
			}
		}
	}
       
	my $counter = 0;

</%init>

