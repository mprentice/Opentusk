<%args>
	$backButton => ''
	$newfolder => ''
	$add_to_folder => ''
	$content_item => ''
</%args>

<%attr>
	page_header	  => '/tmpl/prepend:manage_header_div_layout'
	page_footer	  => '/tmpl/footer:footer_div_with_tufts_links'
	no_check_path	=> 1
</%attr>


<%once>
  use HSDB4::SQLRow::User;
  use HSDB4::SQLRow::PersonalContent;
  use HSDB4::Constants;
  use TUSK::FlashCard;
  use TUSK::Constants;
  use Data::Dumper;
</%once>


<form method="post" name="fcardform" id="fcardform">

%  if(($backButton eq '') && ($ENV{'HTTP_REFERER'} && ($ENV{'HTTP_REFERER'} !~ /$ENV{'SCRIPT_NAME'}/))) {$backButton = $ENV{'HTTP_REFERER'};}
%  if($backButton) {

<input type="hidden" name="backButton" value="<% $backButton %>">

%  }  

<%perl>
my $disp_txt = "Home Page";
if($backButton) { 
		my @splt = (split "/", $backButton);
		if ($splt[$#splt] eq 'home'){
			$disp_txt = "Home Page";
		}
		else {
			$disp_txt = "Collection";
		}
}

</%perl>

<& /tmpl/element:cms_button_row,
    links => [
        {display_txt => 'Add a New Deck',
        link_txt    => "javascript:submitnewfolder('fcardform');",
		
		},
		
		{display_txt => 'Back to '.$disp_txt,
        link_txt    => "javascript:document.location='$backButton';",
		
		},
        ]
&>


%  my @pContent = TUSK::FlashCard->spliceDeck($m->session->{'user'},0);
%  @pContent = sort { $a->field_value("sort_order") <=> $b->field_value("sort_order") } @pContent;
%  my $pcLength = scalar(@pContent) ;
%  if( $pcLength > 0) {

<table name="fc" border="0" cellpadding="3" align="center" cellspacing="0" class="wide" width="100%" >

%    my $i =1;
%    foreach my $pieceOfContent (@pContent) {

<& /tmpl/objects/PersonalContent:edit_PersonalContentCollectionDeck, personalContentRef => \$pieceOfContent, i => $i , lngth => $pcLength &>

%    	$i++;
%    }  # end for loop

</table>

%  } else {
     <b>No Decks Available</b><br>
%  }

<input type="hidden" name="order" value="">
<input type="hidden" name="newfldr" id="newfldr"/>
<input type="hidden" name="deleteDeck" > 
<input type="hidden" name="rnm" id="rnm" />

</form>


<%init>

		if($ARGS{'newfldr'} == 1) {

			# add a new deck, but add to top of list
			my $folder = $m->session->{'user'}->new_child_personal_content_deck;
			# remove non-deck elements, do a sort moving the last element (new deck) to first position
			my @personalContent = TUSK::FlashCard->spliceDeck($m->session->{'user'},0);
			my $length = scalar(@personalContent);
			my $str =  HSDB4::SQLRow::PersonalContent->doUpdateSortOrders("$length-1",1, \@personalContent) ;

		}
		
		my @personalContent = $m->session->{'user'}->child_personal_content;
        @personalContent = sort { $a->field_value("sort_order") <=> $b->field_value("sort_order") } @personalContent;
	
		if( $ARGS{'order'} ) {
		 
			 HSDB4::SQLRow::PersonalContent->doUpdateSortOrders($ARGS{'order'},1, \@personalContent) ;
		}

		if(  $ARGS{'rnm'}) { 
			my $cID = $ARGS{'rnm'}; 
			my $folder = HSDB4::SQLRow::PersonalContent->new()->lookup_key( $cID );
			$folder->edit_body( $ARGS{"rename_$cID"} );

		}
		
		if($ARGS{'add_to_folder'}) {
			
			my $folder;
			
			if ($ARGS{'add_to_folder'} == -1) {
				$folder = $m->session->{'user'}->new_child_personal_content_deck;
		 		# remove non-deck elements, do a sort moving the last element (new deck) to first position		
				my @personalContent = TUSK::FlashCard->spliceDeck($m->session->{'user'},0);
				my $length = scalar(@personalContent);
				my $str =  HSDB4::SQLRow::PersonalContent->doUpdateSortOrders("$length-1",1, \@personalContent) ;
				
			} 
			else {
				$folder = HSDB4::SQLRow::PersonalContent->new;
				$folder->lookup_key($ARGS{'add_to_folder'});
			}

			my $content_id_no_slash = substr $ARGS{'content_item'}, 1;
            my $contnt = HSDB4::SQLRow::Content->new->lookup_key($content_id_no_slash);
            
            if ( $contnt->content_type eq "Collection" ) {
				#this is a collection, go through all child content and add it
                
				my @subContent = $contnt->active_child_content();
				foreach my $piece (@subContent){
					   
					if ( $piece->type eq "Slide"){
						my $card = TUSK::FlashCard->new();
						my $bdy = $piece->out_just_body;
						$bdy =~ s/<(.*?)>//gi;
						my $ttl = $piece->out_html_label;
						$ttl =~ s/<(.*?)>//gi;
						$card->setAnswer($ttl." -- ".$bdy);
						
            			$card->setContentID($piece->content_id);
						$card->setParentPersonalContentID($folder->primary_key);
	        			my $card_id = $card->save({'user' => $m->session->{'user'}->user_id()});

					}

				}
			}
            elsif($contnt->content_type eq "Slide") {			

				###take content id and deck id, create card and link 
				my $cntnt = HSDB4::SQLRow::Content->new->lookup_key($content_id_no_slash);
				my $card = TUSK::FlashCard->new();
            	$card->setContentID($content_id_no_slash);
				my $bdy = $cntnt->out_just_body;
				$bdy =~ s/<(.*?)>//gi;
				my $ttl = $cntnt->out_html_label;
				$ttl =~ s/<(.*?)>//gi;
				$card->setAnswer($ttl." -- ".$bdy);
				$card->setParentPersonalContentID($folder->primary_key);
	        	my $card_id = $card->save({'user' => $m->session->{'user'}->user_id()});               
				$ARGS{'content_item'} =~ s!^.*/hsdb4/content!!g;

			}
			else{

				# cannot add content of this type
			}

		}
		if ( $ARGS{'deleteDeck'} ) {

			my $pc = HSDB4::SQLRow::PersonalContent->new->lookup_key($ARGS{'deleteDeck'});
			$pc->delete;
		}
	</%init>

<%method jsarray>
% return ['flashcards.js'];
</%method>

<%method red_header_class>
%	return 'blueHeaderBar';
</%method>

<%method red_header_text>
% return $m->comp( "SELF:title" );
</%method>

<%method title>
%	return $TUSK::Constants::SiteAbbr . " Flash Card Decks: " . $m->session->{'user'}->out_abbrev;
</%method>