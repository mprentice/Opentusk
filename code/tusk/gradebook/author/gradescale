<%once>
	use TUSK::GradeBook::GradeEvent;
    use TUSK::GradeBook::LinkCourseGradeEventType;
	use TUSK::GradeBook::LinkCourseGradeScale;
	use TUSK::GradeBook::LinkCourseCustomScale;
	use TUSK::GradeBook::GradeScaleType;
	use TUSK::Functions;
	use Data::Dumper;
</%once>

<%method jsarray>
% return ['layers.js', 'element.js'];
</%method>

<%method title>
%return "Grading Scale";
</%method>

<%method red_header_text>
% return $m->comp('SELF:title');
</%method>

<%attr>
show_timeperiod_dropdown => 1
</%attr>

<%shared>
	my $type_path = $m->comp("/tmpl/url:get_type_path");
	my $type_object = $m->comp("/tmpl/url:get_type_object");
	my $coursepk = $type_object->primary_key;
	my $time_period = $m->comp("SELF:get_timeperiod_id");
	my $scale_array = [];
</%shared>

<& /tmpl/element:form, params => {
				method => 'POST',
				onsubmit =>'return event_submit(this)',
				name => 'coursePreferences' } &>

<%perl>

my $grade_event_types = TUSK::GradeBook::GradeEventType->new->lookup();
my $numTypes = scalar (@$grade_event_types);

my $grade_scale_types = TUSK::GradeBook::GradeScaleType->new->lookup();
my $num_types = scalar (@$grade_scale_types);

</%perl>

<table cellspacing="4"  >
<tr  >
<td colspan="2" ></td>
</tr>
<tr> 
<td colspan="3" >Please select a grading scale from the list below. </td>
</tr>
<tr id="abc-tr"   >
<td width="10">

<%perl>
	my $scaleType;
	my $linkCourseGradeScale = TUSK::GradeBook::LinkCourseGradeScale->lookupReturnOne("course_id = $coursepk and time_period_id = $time_period");
	if( defined($linkCourseGradeScale) )
	{
		$scaleType = $linkCourseGradeScale->getGradeScaleTypeID();
	}

</%perl>
 

<tr  >
<td width="10">

<%perl>

my $gsType1 =  @$grade_scale_types[1]->getGradeScaleTypeID();

if($scaleType eq $gsType1 ) {
	print "<input type='radio' value='$gsType1'  name='gscale'  checked />"; }
else { print "<input  type='radio' value='$gsType1' name='gscale' />"; }

</%perl>


</td><td width="10"> <% @$grade_scale_types[1]->getGradeScaleName() %></td>
<td>Final grade will be assigned a numeric percentage.</td>
</tr>

<tr   >
<td width="10">

<%perl>

my $gsType2 =  @$grade_scale_types[2]->getGradeScaleTypeID();

if($scaleType eq $gsType2) {
	print "<input type='radio' value='$gsType2'  name='gscale'  checked />"; }
else { print "<input  type='radio' value='$gsType2' name='gscale' />"; }

</%perl>


</td><td width="10"><% @$grade_scale_types[2]->getGradeScaleName() %></td>
<td>Final grades will be manually assigned.</td>
</tr>

<tr><td width="10"> 

<%perl>

my $gsType3 = @$grade_scale_types[3]->getGradeScaleTypeID();

if($scaleType eq $gsType3 ) 
{ print "<input type='radio' value='$gsType3'  name='gscale' checked  />"; }
else { print "<input  type='radio' value='$gsType3' name='gscale' />"; }

</%perl>


</td><td width="10"><% @$grade_scale_types[3]->getGradeScaleName() %> </td>
<td> <table>


<%perl>

	my $tStrg = "Click here for an example of a custom scale";
	my $help_link = $m->scomp('/tmpl/element:help_link', params => {content_id =>790440, text=> $tStrg, not_xmetal => 1});
	print "$help_link";

	my $linkCCScale = TUSK::GradeBook::LinkCourseCustomScale->lookup("course_id = $coursepk order by lower_bound desc");


	foreach my $link_scale (@$linkCCScale){
		my $scale_hash;
	    $scale_hash->{'grade'} = $link_scale->getGrade();
		$scale_hash->{'number'} = $link_scale->getLowerBound();
	    $scale_hash->{'course_id'} = $coursepk;
		$scale_hash->{'time_period'} = $time_period;
		push(@$scale_array,$scale_hash);
	}


  	my  $button_text = $m->scomp('/tmpl/element:button',
               params=>{ onclick=>"addnewdata('scalediv',
                        { link_course_custom_scale_id:'0',grade:'',number:'',course_id:$coursepk,time_period:$time_period });",
               name=>'add',
               label=>'Add Row'});


	$m->comp('/tmpl/element:sort_order_box', params =>{
	
		no_add_button=>1,
        label=>'Custom Scale',
		no_label=>1,
		buttons => [$button_text],
		layer_info => {
			layer => 'scalediv',
			context_path => $m->comp("/tmpl/url:get_full_path"),
			fields => ['link_course_custom_scale_id','grade', 'number','course_id','time_period'],
			name => 'scale',
			sort => {usage => 'No'},
			action => {usage => 'No'},
			scrollrows => 10,
			action => {usage => 'Yes', length=>100,
                                functions => [
                                        {func=>'remove', label=>'Delete'} ]},
			display => [
				{label=>'Low %', field=>'number', align=>'center', length=>50,type=>'textbox'},
				{label=>'Grade',field=>'grade', align=>'center', length=>50, type=>'textbox'},
				{label=>'CourseID' ,field=>'course_id', align=>'right', length=>40 ,type=>'hidden'},	
				{label=>'timeperiodID' ,field=>'time_period', align=>'right', length=>40 ,type=>'hidden'}	
			],
			validate => { usage => 'No', form => 'coursePreferences'},
			data => $scale_array }	});

	print "</table></td>";
</%perl>



<%init>

if ( defined( $ARGS{'submit_check'} )  ) 
{

    my $type_object = $m->comp("/tmpl/url:get_type_object");
	my $courseID = $type_object->primary_key;
	if( defined($ARGS{'gscale'}) )
	{
		#if there exists a grade scale for the course, just update it, otherwise create a new link table row
		my $linkCourseGradeScale = TUSK::GradeBook::LinkCourseGradeScale->lookupReturnOne("course_id = $courseID and time_period_id = $time_period");
		if( defined($linkCourseGradeScale))
		{
			$linkCourseGradeScale->setGradeScaleTypeID($ARGS{'gscale'});
			$linkCourseGradeScale->save({'user' => $m->session->{'user'}->user_id()});	
		}
		else 
		{
		
			$linkCourseGradeScale = TUSK::GradeBook::LinkCourseGradeScale->new();
			$linkCourseGradeScale->setCourseID($courseID);
			$linkCourseGradeScale->setGradeScaleTypeID($ARGS{'gscale'});
			$linkCourseGradeScale->setTimePeriodID($time_period);
			$linkCourseGradeScale->save({'user' => $m->session->{'user'}->user_id()});
		}
		
		# if the grading scale is custom, save custom scale to DB
		if( $ARGS{'gscale'} eq "4" )
		{

			# first delete old entries for this course
			my $oldScales = TUSK::GradeBook::LinkCourseCustomScale->lookup("course_id = $courseID");
            foreach my $oldOne (@$oldScales){			
		   		$oldOne->delete();
			}
		   
		
			my $rowHash = $m->comp('/tmpl/process:process_fields',fields=> \%ARGS, filter=>'^scalediv');
     
			$m->comp('/tmpl/process:manipulate_rows',
			row_type => 'Direct',
			user => $m->session->{'user'}->user_id(),
			object_name => 'TUSK::GradeBook::LinkCourseCustomScale',
			fields_data => $rowHash,
			field_function_map => {'number'=>'setLowerBound',
					'grade'=>'setGrade',
					'course_id' =>'setCourseID',
					},
			display_data => $scale_array );


		}
	}

       
 	my $reload_url = $r->uri();
    my $msgtxt = "Changes successfully saved";
    $m->comp("/tmpl/wizard:do_next", args => \%ARGS, default_transition => $reload_url . "?msg=$msgtxt");

}


</%init>

</td>
</tr>

<tr id="cgs-tr" style="cursor:pointer" onclick="cl('cgs')">
</tr>

</table>
<table>
<& /tmpl/element:save_button, params=>{
        label=>'Save Changes',
        cancel_onclick=>"go_back('" . $m->comp("/tmpl/url:construct_url", 'base_url' => "/gradebook/author/show") . "');",
        name=>'save_changes'} &>
</table>

</form>