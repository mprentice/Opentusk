<%shared>

my $id = $m->comp("/tmpl/url:get_first_path_id");

</%shared>

<%method title>
<%perl>
my $title = "Create Patient Type";
if (defined($id)){
        $title = "Modify Patient Type";
}
return $title;
</%perl>
</%method>

<%method jsarray>
% return ['layers.js','element.js','caseshell.js','object_tree.js'];
</%method>

% if ($is_edit){
<& /tmpl/element:cms_button_row, 
	links => [{display_txt => 'Assign Tests',
	           link_txt    => "/case/administrator/assigntests/$type_path/$id?phase_type=$selected_phase"} ]
&>
% }

<& /tmpl/element:form, params => { 
                method => 'POST',
                name => 'patienttypeaddedit',
                onsubmit => undef } &>

<& /tmpl/wizard:include &>

<& /tmpl/element:table, params => { width => "100%",
                border =>"0",
                cellspacing =>"0",
                cellpadding =>"0" } &>

<& /tmpl/element:textbox, params =>{ label => 'Name',
                name => 'type_name',
                value => $patient_type->getTypeName(),
                size => 60,
                length => 255 } &>


% if (defined($id)) {

<& /tmpl/element:section_header_row, label=>'Tests', skip_space=>1 &>

<& /tmpl/element:sort_order_box , params =>{
        no_add_button => 1,
        buttons=>[$drop_down],
        no_label => 1,
        sort_box => 1,
        td_class => 'no-button',
        layer_info => {
            context_path => $m->comp("/tmpl/url:get_full_path"),
            base_path =>  $m->comp("/formbuilder/util:get_base_dir"),
            empty_message => 'No tests for this category',
            layer => "testdiv",
            fields => ['test_value_id'],
            name => 'exam',
            sort => {usage => 'No'},
            action => {usage => 'Yes', length=>100, functions => 'per row'},
            display => [
                {label => 'Name',field => 'title', 
                 align => 'left', length => 250},
                {label => 'Value',field => 'default_value', 
                 align => 'center', length => 150, type => 'textbox'},
                {label => 'Content ID',field => 'default_content_id', 
                 align => 'center', length => 75, type => 'textbox'},
                {label => 'Source',field => 'source', 
                 align => 'center', length => 75, type => 'textbox'},
                ],
            validate => {
                usage => 'No',
                form => 'patienttypeaddedit'
                },
            data => $test_data }
        } 
&>

% }


<& /tmpl/element:save_button, params=>{
		one_column=>'1',
		colspan=>'2',
		td_class=>'no-button',
		label=>'Save Changes',
		cancel_onclick=>"go_back('/case/administrator/patienttypeshow/$type_path')",
		name=>'save_changes'} &>
</form>
</table>

<%perl>
if (defined($id)){
	$m->comp('SELF:footer', obj=>$patient_type);
}
</%perl>

<%init>

my $patient_type;
my $tests_by_battery;

my $is_edit = 0;

my $reload_url = $r->uri();
my $type_path = $m->comp('/tmpl/url:get_type_path');
my $school = $m->comp('/tmpl/url:get_type_object');

my $user_id = $m->comp('SELF:user');

my $selected_phase = (defined($ARGS{'phase_type'}))? $ARGS{'phase_type'} : 'physical exam';

my $test_data = [];
my $drop_down = [];



if (defined($id)){
	$is_edit = 1;

	my $phase_types = [
	                   {label=>'Physical Exam', value=>'physical exam'},
	                   {label=>'Diagnostic Studies', value=>'diagnostic studies'},
	                   {label=>'History', value=>'history'}];

	$drop_down = $m->scomp('/tmpl/element:dropdown', params=>
	        {label 	=> 'Select Phase Type',
	         name		=> 'select_phase_type',
	         onchange	=> "change_phase(this, '$reload_url');",
	         multiple	=> 0,
	         selected	=> $selected_phase,
	         options	=> $phase_types });

	$patient_type = TUSK::Case::PatientType->lookupKey($id);
	

# add page_phase_type to this query
# then add ability to get selected index of drop down to be correct phase
	my $patient_tests = $patient_type->getTestsAndValues($selected_phase);
	my $lastBatteryID = 0;


	my $battery_tests = $patient_type->getTestsAndValues($selected_phase);

	foreach my $battery (@$battery_tests){
		push @$test_data, {
		    title              => '<span class="pPAECategory">CATEGORY: ' . $battery->getBatteryTitle() . '</span>',
		    isHeaderRow        => '1',
		    default_value      => '',
		    default_content_id => '',
		    source             => '',	       
		    test_value_id      => '', 
		    noHiddenFields     => '1', 
			_action => {usage => 'Yes', length=>100}
		    };

		my $tests = $battery->getJoinObjects('TUSK::Case::Test');

		foreach my $test (@$tests){

			my $subtests = $test->getJoinObjects('subTest');
			if (scalar(@$subtests)){
				my $value = $test->getJoinObject('TUSK::Case::TestValue');
				push @$test_data, {
				    title              => '<span class="pPAEMasterTest">' . $test->getTitle() . '</span>',
				    isHeaderRow        => '1',
				    default_value      => '',
				    default_content_id => '',
				    source             => '',	       
				    test_value_id     => $value->getPrimaryKeyID(), 
				    _action => {usage => 'Yes', length=>100, functions => [
				    {func=>'removemulti', label=>'Delete', extra_param=>[@$subtests + 1] } ]}
				    };
				foreach my $st (@$subtests){
					my $value = $st->getJoinObject('subTestValue');
					push @$test_data, {
					    title => '<span class="pPAESubTest">' . $st->getTitle() . ' ' . $st->getFormattedUnits() . '</span>',
					    default_value      => $value->getDefaultValue(),
					    default_content_id => $value->getDefaultContentID(),
					    source             => $value->getSource(),	       
					    test_value_id     => $value->getPrimaryKeyID(), 
					    _action            => {usage => 'Yes', length=>100}
	 				    };
				}
			} else {
				my $value = $test->getJoinObject('TUSK::Case::TestValue');
				push @$test_data, {
				    title => $test->getTitle() . ' ' . $test->getFormattedUnits(),
				    default_value => $value->getDefaultValue(),
				    default_content_id => $value->getDefaultContentID(),
				    source             => $value->getSource(),	       
				    test_value_id            => $value->getPrimaryKeyID(), 
				    _action => {usage => 'Yes', length=>100, functions => [
				    {func=>'remove', label=>'Delete'} ]}
	 			    };
			}
		} 
	}

} else {
        $patient_type = TUSK::Case::PatientType->new();
}

if (defined($ARGS{'submit_check'}) or $m->comp("/tmpl/wizard:submitted", args => \%ARGS)){

	my $msg = ($is_edit)? "Patient Type successfully modified" : "Patient Type successfully added";
	my $errmsg;

	$patient_type->setTypeName($ARGS{'type_name'});	
	$patient_type->setSchoolID($school->getPrimaryKeyID());

	unless ($is_edit){
		my $school_patient_types = TUSK::Case::PatientType->new()->lookup("school_id = " . $school->getPrimaryKeyID());
		my $sort_order = 10 + ((scalar(@$school_patient_types)) ? $school_patient_types->[-1]->getSortOrder() : 0);
		$patient_type->setSortOrder($sort_order);
	}

	if ($patient_type->getTypeName()){
		$patient_type->save({user=>$user_id})
	} else {
		$errmsg = 'No name provided for patient type. Therefore, nothing was created or saved.';
		$m->comp("/tmpl/wizard:do_next", args => \%ARGS, default_transition => $reload_url . "?phase_type=$selected_phase&errmsg=$errmsg" );
	}

	unless ($is_edit) {
		$reload_url .= '/' . $patient_type->getPrimaryKeyID();
	}

	my $rowHash = $m->comp('/tmpl/process:process_fields',fields=>\%ARGS,filter=>'^testdiv');

	$m->comp('/tmpl/process:manipulate_rows',
	    row_type => 'Direct',
	    user => $user_id,
	    object_name => 'TUSK::Case::TestValue',
	    fields_data => $rowHash,
	    field_function_map => {
	        'test_id'=>'setTestID',
	        'default_value'=>'setDefaultValue',
	        'default_cost'=>'setDefaultCost',
	        'default_content_id'=>'setDefaultContentID',
	        'source' => 'setSource'
	        },
	    display_data => $test_data);


	$m->comp("/tmpl/wizard:do_next", args => \%ARGS, default_transition => $reload_url . "?phase_type=$selected_phase&msg=$msg" );

	
}




</%init>

