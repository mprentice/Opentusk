<%doc>
 Copyright 2012 Tufts University 

 Licensed under the Educational Community License, Version 1.0 (the "License"); 
 you may not use this file except in compliance with the License. 
 You may obtain a copy of the License at 

 http://www.opensource.org/licenses/ecl1.php 

 Unless required by applicable law or agreed to in writing, software 
 distributed under the License is distributed on an "AS IS" BASIS, 
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 See the License for the specific language governing permissions and 
 limitations under the License.
</%doc>
<%attr>
	no_check_path	=> 1
</%attr>

<%once>
  use HSDB4::SQLRow::User;
  use HSDB4::SQLRow::PersonalContent;
  use HSDB4::SQLRow::Content;
  use HSDB4::Constants;
  use TUSK::FlashCard;
  use TUSK::Constants;
  use Data::Dumper;
</%once>

% if ($hascards ) {  

<& /tmpl/element:form, params => {
				method => 'POST',
				onsubmit =>'return',
				name => 'savecard' } &>

<input type="hidden" value="<% $indx %>" name="card_index" />
% my $k = 0;
% foreach my $crd (@$fcards){

<input type="hidden" value="<% $crd->getFlashCardID %>" name="c<% $k %>" />
% $k++; } # end foreach


% 	my $pretxt;
% 	my $uri = $ENV{SCRIPT_URI}; 
%	my @sublnks;
%	my $keep_index="";
%	if ($indx > 0 ) {
%		$keep_index="&card_index=$indx";
%	}
%	foreach my $size qw(medium large xlarge orig){
%		my $action_str = "?SIZE=". $size;
%		if ( $ARGS{'showans'} ) {
%			$action_str.="&showans=1"; 
%		}
%		my $hrf = "javascript:submit_with_action(\"$action_str\")";
%		push @sublnks, ($ARGS{SIZE} eq $size)? $size : "<a href='$hrf'>$size</a>";
%	}
%	my $lnk_str = join ' | ', @sublnks;
%	$pretxt = "<div id=\"subNav\">$lnk_str</div>";
%   print $pretxt;

% my $cntnt = HSDB4::SQLRow::Content::Slide->new()->lookup_key(@$fcards[$indx]->getContentID);
% my $zoom_level;
% if ( exists( $ARGS{'SIZE'}) ) {
% 		$zoom_level = $ARGS{'SIZE'};
% } 
% elsif( exists( $ARGS{'zoom_level'}) ){
%		$zoom_level=$ARGS{'zoom_level'};
% }
% else { $zoom_level = "medium"; }

% my $ovrly ="";
% if ( $ARGS{'showans'} && !defined($ARGS{'submitnext'})  && !defined($ARGS{'submitprevious'})) {
% 	if ($cntnt->overlay_data) { $ovrly="/overlay"; }
% }

% my $img_src = "$ovrly/$zoom_level/".@$fcards[$indx]->getContentID;
% my $img = "<img src=$img_src class='mainImg' />";

<input type="hidden" value="<%$zoom_level%>" name="zoom_level" id="zoom_level" />


% if(@$fcards[$indx]->getContentID()) {
<div id="imgdiv" class="image" ><% $img %></div>
% }


<div>
% if ( @$fcards[$indx]->getQuestion() ) {
<h2>Question:</h2>
<textarea readOnly name="question" cols="50" rows="5" > <% @$fcards[$indx]->getQuestion() %> </textarea>

% }


<div id="showDiv"  style="display:block;">

% if ( $ARGS{'showans'} && !defined($ARGS{'submitnext'})  && !defined($ARGS{'submitprevious'})) {
%  my $onclck="javascript:submit_with_action('?');";
<input type="button" onclick="<%$onclck%>" id="mybtn" value="Hide Answer"/>


% } else {
% my $onclck="javascript:submit_with_action('?showans=1');";
<input type="button" onclick="<%$onclck%>" id="mybtn" value="Show Answer"/>
% }

</div>


<div id="answerDiv" style="display:block;">
% if ( $ARGS{'showans'} && !defined($ARGS{'submitnext'})  && !defined($ARGS{'submitprevious'})) {
% # if show answer is set show it, as long as it isnt legacy from previous or next card


<%perl>

my $answer_to_display;

if ( @$fcards[$indx]->getAnswer() || !(@$fcards[$indx]->getContentID())) {
	$answer_to_display = @$fcards[$indx]->getAnswer();
}
else{
	
	my $content = HSDB4::SQLRow::Content->new->lookup_key(@$fcards[$indx]->getContentID());

	my $body = $content->out_just_body;
	$body =~ s/<(.*?)>//gi;
	my $title = $content->out_html_label;
	$title =~ s/<(.*?)>//gi;

    (length($body) > 0 ) ? ($answer_to_display = $title." -- ".$body) : ($answer_to_display = $title);
}

</%perl>

 <textarea readOnly  name="answer" cols="50" rows="5" > <% $answer_to_display %> </textarea>

% }

</div>


<div id="prevnxt" style="display:block;">

% if ( ($indx > 0) ) {
<input type="submit" name="submitprevious" value="Previous Card" class="formbutton">
% }
% if ( ($indx < (scalar(@$fcards)-1) ) ) {
<input type="submit" name="submitnext" value="Next Card" class="formbutton">
% }

</div>
</div>
</form>

% } else { # if there are no cards
<br><br>
<h2> There are no cards in this deck </h2>
<br><br>
<input type="reset" style="" value="Back to my Flash Card Decks" id="cancel" name="cancel" onclick="go_back('/mobi/flashcard/home');" class="formbutton"/>
% } 

<%init>
my $pcId = $m->comp("/tmpl/url:get_last_path_id");
my $fcards;
my $indx=0;
my $hascards=1;

my $qStr = "parent_personal_content_id = ".$pcId." order by content_id ASC";
$fcards =  TUSK::FlashCard->lookup($qStr);

# if there are cards in this deck, get started
if ( scalar(@$fcards) > 0 )
{

	if ( exists($ARGS{'card_index'}) ) {
		$fcards= [];
		$indx = $ARGS{'card_index'};

		#load fcards from hidden form data
		my $i=0;
		my $str = "c$i";
		while( exists($ARGS{$str}) ){
			@$fcards[$i] = TUSK::FlashCard->lookupReturnOne("flash_card_id =".$ARGS{$str});	
			$i++;
			$str="c$i";
		}
   
		if ( $ARGS{'submitprevious'} eq 'Previous Card' && ($indx > 0) ) { 
		 	$indx--;
		}
		elsif ( $ARGS{'submitnext'} eq 'Next Card' &&  ($indx < (scalar(@$fcards)-1) ) ) {
			$indx++;
		}

	}
	else {
		#if card index doesnt exist, this is start of deck viewing
		#so need to perform fisher-yates shuffle
		
		#for mobi, now if we change size we have to maintain deck order
		unless ( exists($ARGS{'SIZE'}) ) {

			my $qStr = "parent_personal_content_id = ".$pcId." order by content_id ASC";
			$fcards =  TUSK::FlashCard->lookup($qStr);
			my $i;
   			for ($i = @$fcards; --$i; ) {
   		   	 	my $j = int rand ($i+1);
    	     	next if $i == $j;
    	     	@$fcards[$i,$j] = @$fcards[$j,$i];
    		}
		}    
	}

	#if we've done the entire deck, start over
	if ($indx > ( scalar(@$fcards) -1 ) ){
       
		$indx=0;
	}

} ### end if scalar(fcards) > 0
else { 
	# there are no cards, set flag
	$hascards = 0;
}

</%init>

<%method jsarray>
% return ['mobi.js','scripts.js'];
</%method>

<%method red_header_class>
%	return 'blueHeaderBar';
</%method>

<%method red_header_text>
% my $deck = HSDB4::SQLRow::PersonalContent->new->lookup_key($m->comp("/tmpl/url:get_last_path_id"));
% return "<a href='/mobi/flashcard/home'>Flash Card Decks</a> > " . $deck->out_label;
</%method>

<%method title>
% 	return "Flash Cards";
</%method>

