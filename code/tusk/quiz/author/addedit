<%once>
	use TUSK::Quiz::LinkCourseQuiz;
	use TUSK::Core::JoinObject;
	use TUSK::Quiz::Quiz;
	use HSDB45::TimePeriod;
</%once>

<%shared>
	my $id = $m->comp("/tmpl/url:get_last_path_id");
	my ($quiz, $linkobj, $links, $time_period);
	my $is_edit = 0;
	my $typeObj = $m->comp("/tmpl/url:get_type_object");
	my $school = $typeObj->get_school()->getSchoolName();
	my $time_period_text = '';

	if (defined($id)){
		$is_edit = 1;
	        $quiz = TUSK::Quiz::Quiz->new->lookupKey($id, [ TUSK::Core::JoinObject->new("TUSK::Quiz::LinkCourseQuiz", {joinkey=>'child_quiz_id', origkey=>'quiz_id'}) ]);
		$linkobj = $quiz->getLinkCourseQuizObject;
		$time_period = HSDB45::TimePeriod->new(_school => $school)->lookup_key($linkobj->getTimePeriodID());
	} else {
		$is_edit = 0;
	        $quiz = TUSK::Quiz::Quiz->new();
		$linkobj = TUSK::Quiz::LinkCourseQuiz->new();
		$time_period = HSDB45::TimePeriod->new(_school => $school)->lookup_key($m->comp("SELF:get_timeperiod_id"));
	}

	my $base_url = "/quiz/author/addedit";
</%shared>


<%method startup>
<%perl>
	my $periods = $typeObj->get_time_periods();

	unless (defined $periods) {
		$m->redirect($m->comp("/tmpl/url:construct_url", 'base_url' => "/quiz/author/show", msgtype => 'errmsg', msg => 'Please add a time period prior to creating a new quiz.'));
	}
		
	unless ($time_period->primary_key()) {
		$m->comp('SELF:set_msg', 
 			type 	=> 'err', 
			msg	=> 'Time period is not yet selected. Select one.');

		$time_period_text .= "<select name=\"timeperiod\" onchange=\"document.generic.submit();\" class=\"navsm\">";
		$time_period_text .= "<option class=\"navsm\" value=\"\" SELECTED>";

		foreach my $period (@$periods) {
 			$time_period_text .= "<option class=\"navsm\" value=\"" . $period->primary_key . "\">" . $period->out_display() . "\n";
	   	}
		$time_period_text .= "</select>";
	} else {
		$time_period_text = $time_period->field_value('period') . ' (' . $time_period->field_value('academic_year') . ')'
	}
</%perl>
</%method>


<%method function_token>
%	return ($is_edit) ? 'edit_quiz' : '';
</%method>

<%method nav_bar>
<%perl>
return $m->comp("/quiz/tmpl/nav", 'prefix'=>$m->comp("SELF:url_prefix"),
        page_token  =>'quizaddedit',
        objects => {},
	initial_nav_bar => $m->comp("SELF:get_nav_bar"));
</%perl>
</%method>

<%method title>
<%perl>
my $title = "Create Quiz";
if (defined($id)){
        $title = "Modify Quiz";
}
return $title;
</%perl>
</%method>


<& /tmpl/element:form, params => {
                method		=> 'POST',
		onsubmit	=>'return quiz_submit(this);',
                name 		=> 'quizaddedit',
				 } &>

<& /tmpl/element:table, params => { 
		width		=> "100%",
                border		=> "0",
                cellspacing	=> "0",
                cellpadding	=> "0",
				} &>

<& /tmpl/element:field_display, params =>{ 
	label 	=> 'Time Period:',
	value 	=> $time_period_text,
} &>

<& /tmpl/element:textbox, params => { 
		label	=> 'Quiz Title:',
                name	=> 'title',
                value	=> $quiz->getTitle(),
                size	=> 60,
                length	=> 255,
			} &>

<& /tmpl/element:dropdown, params => { 
		label 		=> 'Quiz Type:',
                name 		=> 'quiz_type',
                onchange	=> undef,
                selected	=> $quiz->getQuizType() ,
                options		=> [
					{ label => 'Self Assessment', 	value => 'SelfAssessment' },
					{ label => 'Graded Quiz', 	value => 'Quiz' },
					{ label => 'Feedback Quiz', 	value => 'FeedbackQuiz' },
				] } &>

<& /tmpl/element:dropdown, params => { 
		label		=> 'Questions per Page:',
                name		=> 'questions_per_page',
                selected	=> $quiz->getQuestionsPerPage(),
                options		=> [ 
					{ label => 'All', value=> '0'   }, 
					{ label => '1',   value => '1'  }, 
					{ label => '2',   value => '2'  }, 
					{ label => '3',   value => '3'  }, 
					{ label => '4',   value => '4'  }, 
					{ label => '5',   value => '5'  }, 
					{ label => '10',  value => '10' }, 
				] } &>

<& /tmpl/element:timebox, params => {
		label		=> 'Time Limit:',
                name		=> 'duration',
                value		=> $quiz->getDuration(),
                size 		=> 10,
                length		=> 10,
		'optional-label'=> 'None',
				 } &>

% if (ref($typeObj) eq "HSDB45::Course"){
<& /tmpl/element:textbox, params => { 
				label 		=> 'Available Date:',
				name 		=> 'available_date',
				value 		=> $linkobj->getFormattedAvailableDate(),
				size 		=> 20,
				maxlength 	=> 20,
				calendar    => 1,
				calendar_type => 'datetime',
				default_time => 'midnight',
} &>

<& /tmpl/element:textbox, params => { 
				label 		=> 'Due Date:',
				name 		=> 'due_date',
				value 		=> $linkobj->getFormattedDueDate(),
				size 		=> 20,
				maxlengt	=> 20,
				calendar    => 1,
				calendar_type => 'datetime',
				default_time => 'endofday',
} &>
% }

% my $random_question_flag = (defined $id) ? $quiz->getRandomQuestionLevel() : 0;
<& /tmpl/element:radio_buttons, params => { 
        label => 'Randomized Questions:',
        name => 'random_question_flag',
	nobreak => 1,
        buttons => [
		{ value => "1", text => "Yes", 
 		  checked => ($random_question_flag == 1) ? 1 : 0,},
                { value => "0", text => "No", 
		  checked => ($random_question_flag == 0) ? 1 : 0, }
		   ],
	}
&>

% my $show_all_feedback = (defined $id) ? $quiz->getShowAllFeedback() : 0;
<& /tmpl/element:radio_buttons, params => { 
        label => 'Show All Feedback (Multiple Choice Questions):',
        name => 'show_all_feedback',
	nobreak => 1,
        buttons => [
		{ value => "1", text => "Yes", 
 		  checked => ($show_all_feedback == 1) ? 1 : 0,},
                { value => "0", text => "No", 
		  checked => ($show_all_feedback == 0) ? 1 : 0, }
		   ],
	}
&>

<& /tmpl/element:textarea, params=>{ label => 'Quiz Instructions:',
                name=>"instructions",
                cols=>"60",
                rows=>"4",
                value=>$quiz->getInstructions()  } &>

<& /tmpl/element:textarea, params=>{ label => 'Ending Message<br>(shown on completion)',
                name=>"ending_message",
                cols=>"60",
                rows=>"4",
                value=>$quiz->getEndingMessage()  } &>


% if ($is_edit){
<& /quiz/author/tmpl/editquestion:show_questions_box, id => $id, links => $links, type => 'Quiz' &>
% }


<& /tmpl/element:save_button, params=>{label=>'Save Changes',
                cancel_onclick=>"go_back('" . $m->comp("/tmpl/url:construct_url", 'base_url' => "/quiz/author/show") . "');",
                name=>'submit'} &>

</form>
</table>

% $m->comp("SELF:footer", obj => $quiz) if ($is_edit);

<%init>

$links = $quiz->getQuizItems();

my $msg;
my $save = 1; 
my $extra;	
if (defined($ARGS{'submit_check'})){
	if ($ARGS{'duration'}){
		$quiz->setDuration($ARGS{'duration'});
	}
	if (ref($typeObj)){
		if ($ARGS{'available_date'}
		    && $ARGS{'available_date'} !~ /^\s*\d\d\d\d\-\d?\d\-\d?\d\s*\d\d?:\d?\d\s*$/){
			$msg = "Available Date must be in the format YYYY-MM-DD HH:MM";
			$save = 0;
		}
		if ($ARGS{'available_date'}){
			$linkobj->setAvailableDate($ARGS{'available_date'} ? $ARGS{'available_date'} : undef);
		}
		if ($ARGS{'due_date'}
		    && $ARGS{'due_date'} !~ /^\s*\d\d\d\d\-\d?\d\-\d?\d\s*\d\d?:\d?\d\s*$/){
			$msg = "Due Date must be in the format YYYY-MM-DD HH:MM";
			$save = 0;
		}
	
		$linkobj->setDueDate($ARGS{'due_date'} ? $ARGS{'due_date'} : undef);
		$linkobj->setTimePeriodID($ARGS{'timeperiod'}) if ($ARGS{'timeperiod'});
	}

        $quiz->setTitle($ARGS{'title'});
        $quiz->setInstructions($ARGS{'instructions'});
        $quiz->setEndingMessage($ARGS{'ending_message'});
        $quiz->setQuizType($ARGS{'quiz_type'});
	$quiz->setQuestionsPerPage($ARGS{'questions_per_page'});
	$quiz->setRandomQuestionLevel($ARGS{'random_question_flag'});
	$quiz->setShowAllFeedback($ARGS{'show_all_feedback'});

	if ($save){
		$m->comp('/quiz/author/tmpl/process:questions_sort_order', type => 'Quiz', id => $id, args => \%ARGS); 
		$quiz->save({'user'=>$m->session->{'user'}->user_id()});
		$id = $quiz->getPrimaryKeyID();
		if (ref($typeObj)){
			if ($is_edit == 0){
				$linkobj->setChildQuizID($id);
				if (ref($typeObj) eq "HSDB45::Course"){
					$linkobj->setSelf($typeObj,$time_period->primary_key());
					my $course_quizzes = TUSK::Quiz::LinkCourseQuiz->lookup( "parent_course_id = " . $typeObj->course_id() . " and school_id = " . $typeObj->get_school()->getPrimaryKeyID());
					my $sort_order = 10 + ((scalar(@$course_quizzes)) ? $course_quizzes->[-1]->getSortOrder() : 0);
					$linkobj->setSortOrder($sort_order);
				}
			}
			$linkobj->save({'user'=>$m->comp('SELF:user')});
		}

		my $msgtxt;
		if ($is_edit){
			$msgtxt = "Quiz successfully modified";
		}else{
			$extra = $id;
			$msgtxt = "Quiz successfully created";
			my $user_role = TUSK::Permission::UserRole->new();
			$user_role->setUserID($m->comp('SELF:user'));
			$user_role->setRoleToken('quiz', 'manager');
			$user_role->setFeatureID($id);
			$user_role->save({'user'=>$m->comp('SELF:user')});
		}

		$m->redirect($m->comp("/tmpl/url:construct_url", 'base_url' => "/quiz/author/addedit", 'extra' => $extra, 'msg' => $msgtxt));
	}
} 
</%init>



<%method jsarray>
<%perl>
	return [
			"layers.js",
			"quiz.js",
			"element.js",
			"object_tree.js",
			"calendar.js",
			"calendar-en.js",
			"calendar-setup.js",
			"jquery/jquery.min.js",
			"jquery/plugin/interface/interface.js",
			"jquery/plugin/json.js",
			"jquery/plugin/inestedsortable-1.0.1.pack.js",
			"jqNestedSortableFunctions.js" 
			];
</%perl>
</%method>
