<%once>
	use TUSK::FormBuilder::Form;
</%once>

<%method jsarray>
% return ['layers.js', 'formbuilder.js', 'element.js'];
</%method>

<%shared>
	my $formName = '';
	my $formDescription = '';
	my $formPublished = '';
</%shared>

<%method page>
<%args>
	$args
	$form => 0
</%args>
<%perl>
	my $basedir = $m->comp("/formbuilder/util:get_base_dir");

	unless($form) {
		my $form_id = $m->comp("/tmpl/url:get_last_path_id");
		$form = TUSK::FormBuilder::Form->new->lookupKey($form_id);
	}

	my $fields_data = [];	
	# if we were asked to construct a new form

	if($form) {
		unless($form eq 'new') {
			my $fields = $form->getFields();
	
			foreach my $field (@{$fields}){
				my $field_type = $field->getFieldTypeObject();
				my $link_obj = $field->getLinkFormFieldObject();
				my $hash = { 'link_form_field_id' => $link_obj->getPrimaryKeyID(),
					'field_id' => $field->getPrimaryKeyID(),
					'field_name'=> $field->getFieldName(),
					'field_type'=> $field_type->getLabel(),
					};
				push @{$fields_data}, $hash;
			}
	
			if (defined($args->{'form_submit'}) or $m->comp("/tmpl/wizard:submitted", args => $args)){
				$args->{'form_name'} = 'No Name' unless ($args->{'form_name'});
				$form->setFormName($args->{'form_name'});
				$form->setFormDescription($args->{'form_description'});
				$form->setPublishFlag($args->{'publish_flag'});
				$form->save({'user' => $m->session->{'user'}->user_id()});
	
				$m->comp("/tmpl/process:process_sort_orders", 'layer' => 'fieldsdiv', 
						      		'args' => $args, 
						      		'class' => 'TUSK::FormBuilder::LinkFormField', 
	                                              		'primary_key_field' => 'link_form_field_id');
	
				$m->comp("/tmpl/wizard:do_next", args => $args, default_transition => $m->comp("/tmpl/url:construct_url", 'base_url' => $ENV{SCRIPT_NAME}, 'msg' => 'Form successfully modified'));
			}

			$formName = $form->getFormName();
			$formDescription = $form->getFormDescription();
			$formPublished = $form->getPublishFlag();
		}
	}
</%perl>

<& /tmpl/element:form, params => {
                method => 'POST',
		onsubmit =>'return formedit_submit(this);',
                name => 'formedit' } &>

<& /tmpl/wizard:include &>

<& /tmpl/element:table, params => { width => "100%",
                border =>"0",
                cellspacing =>"0",
                cellpadding =>"0" } &>

<& /tmpl/element:textbox, params =>{ label => 'Title',
                name => 'form_name',
                value => $formName,
                size => 60,
                length => 100 } &>
<& /tmpl/element:textarea, params=>{ label => 'Description',
                name=>'form_description',
                cols=>"60",
                rows=>"4",
                value=>$formDescription  } &>

<& /tmpl/element:dropdown, params=>{ label => 'Posted?',
                name=> "publish_flag",
                onchange=> "",
		selected=> $formPublished,
                options => [{ label => 'No', value => '0'}, { label => 'Yes', value => '1' } ] } &>



% if($form eq 'new') {
<& /tmpl/element:save_button, params=>{label=>'Save And Continue', name=>'save_new_form', 'no_cancel_button' => 1} &>
% } else {
%	my $button_text = '';
%	$m->comp({store=> \$button_text},'/tmpl/element:button', 
%			params=>{ onclick=>"window.location='" . $m->comp("/tmpl/url:construct_url", 
%			'base_url' => $basedir . "/field") . "'",
%			name=>'addfield',
%			label=>'Create Field'});


<& /tmpl/element:sort_order_box , params =>{
		no_add_button => '1',
                label=>'Fields',
		buttons=>[$button_text],
		sort_box => 1,
                layer_info => {
			context_path => $m->comp("/tmpl/url:get_full_path"),
			base_path => $basedir,
			empty_message => 'No fields for this form',
                        layer => 'fieldsdiv',
                        fields => ['field_id', 'link_form_field_id', 'field_name', 'field_type'],
                        name => 'field',
                        sort => {usage => 'Yes', length=>50},
                        action => {usage => 'Yes', length=>100, functions => [
							{func=>'field_modify', label=>'Modify'},
                            {func=>'field_delete', label=>'Delete'} ]},
                        display => [
                            {label=>'Name',field=>'field_name', align=>'left', length=>350},
                            {label=>'Type',field=>'field_type', align=>'left', length=>130},
                            {label=>'LinkFormField',field=>'link_form_field_id', length=> 0, type=> 'hidden'},
                        ],
                        validate => {
                            usage => 'No',
							form => 'formedit'
                        },
                        data => $fields_data }
                } &>

<& /tmpl/element:save_button, params=>{label=>'Save Changes', name=>'form_submit', 'no_cancel_button' => 1} &>
%}

</table>
</form>
</%method>
